/**********************************************************************************
77. Combinations

Total Accepted: 65424 Total Submissions: 198085 Difficulty: Medium
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
**********************************************************************************/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

class Solution {
public:
	vector<vector<int>> combine(int n, int k) 
	{
		vector<vector<int>> res;
		vector<int> path;
		path.reserve(2);

		combine(n, k, 1, path, res);

		return res;
	}

private:
	void combine(int n, int k, int start, vector<int> path, vector<vector<int>> &res)
	{
		if (path.size() == k)
		{
			res.push_back(path);
			return;
		}

		for (int i = start; i <= n; ++i)
		{
			path.push_back(i);
			combine(n, k, i + 1, path, res);
			path.pop_back();
		}
	}
};

int main()
{

	Solution so;
	vector<vector<int>> res = so.combine(2, 2);

	for each (auto vec in res)
	{
		for each (auto ele in vec)
		{
			cout << ele << "\t";
		}
		cout << endl;
	}
	return 0;
}